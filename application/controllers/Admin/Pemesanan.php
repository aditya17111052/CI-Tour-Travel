<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pemesanan extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pemesanan_model');
        $this->load->model('Paket_wisatum_model');

        if(!$this->session->userdata('level')){
            $this->session->set_flashdata('login_gagal', 'Anda Harus Login terlebih dahulu.');
            redirect('login');
        } else if($this->session->userdata('level') && ($this->session->userdata('level') == "tourguide")){
             $this->session->set_flashdata('login_gagal', 'Halaman Ini hanya dapat diakses oleh admin dan Tour Agent.');
            redirect('login');
        }
    } 

    

    /*
     * Listing of pemesanan
     */
    // function index()
    // {
         function index($offset=0)
    {

        $config['per_page']= 5;
        $data['bulan'] = $this->input->post('bulan') ? $this->input->post('bulan') : date("m");
        $data['tahun'] = $this->input->post('tahun') ? $this->input->post('tahun') : date("Y");
        $data['alamat'] = $this->input->post('alamat') ? $this->input->post('alamat') : "";
        $total_data = $this->Pemesanan_model->data_pemesanan($data['bulan'],$data['tahun'],$data['alamat']);



        $config['total_rows'] = count($total_data);
        $config['base_url']= base_url().'admin/Pemesanan/index';
        $config['per_page']= 5;


        $config['full_tag_open']="<ul class='pagination pagination-sm' style='position:relative; top: -25px'> ";
        $config['full_tag_close']="</ul>";
        $config['num_tag_open']="<li>";
        $config['num_tag_close']="</li>";
        $config['cur_tag_open']="<li class='disabled'><li class='active'><a href='#'>";
        $config['cur_tag_close']="<span class='sr-only'></span></a></li>";
        $config['next_tag_open']="<li>";
        $config['next_tag_close']="</li>";
        $config['prev_tag_open']="<li>";
        $config['prev_tag_close']="</li>";
        $config['first_tag_open']="<li>";
        $config['first_tag_close']="</li>";
        $config['last_tag_open']="<li>";
        $config['last_tag_close']="</li>";

        $this->pagination->initialize($config);
        
        $data['halaman']=$this->pagination->create_links();
        $data['offset']=$offset;
        $data['bulan'] = $this->input->post('bulan') ? $this->input->post('bulan') : date("m");
        $data['tahun'] = $this->input->post('tahun') ? $this->input->post('tahun') : date("Y");
        $data['alamat'] = $this->input->post('alamat') ? $this->input->post('alamat') : "";
        $data['pemesanan'] = $this->Pemesanan_model->data_pemesanan($data['bulan'],$data['tahun'],$data['alamat']);

        $data['data']=$this->Pemesanan_model->ambil_data($config['per_page'], $offset, $data['bulan'],$data['tahun'],$data['alamat']);


        // $pemesanan = $this->db->get("pemesanan");
        // $data['bulan'] = $this->input->post('bulan') ? $this->input->post('bulan') : date("m");
        // $data['tahun'] = $this->input->post('tahun') ? $this->input->post('tahun') : date("Y");
        // $data['alamat'] = $this->input->post('alamat') ? $this->input->post('alamat') : "";
        // $data['pemesanan'] = $this->Pemesanan_model->data_pemesanan($data['bulan'],$data['tahun'],$data['alamat']);
        // $data['pemesanan']=$this->Pemesanan_model->get_all_pemesanan();        
        $data['_view'] = 'layouts/admin/pemesanan/index';
        $this->load->view('layouts/admin/main',$data);
    }

    function cari(){

    $keyword = $this->input->get('cari', TRUE); //mengambil nilai dari form input cari
    $data['pemesanan'] = $this->Pemesanan_model->cari($keyword); //mencari data karyawan berdasarkan inputan
    $data['_view'] = 'layouts/admin/pemesanan/cari';
    $this->load->view('layouts/admin/main', $data); //menampilkan data yang sudah dicari
    }

    /*
     * Adding a new pemesanan
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            
            // $harga = harga*jumlah_anggota;
            $params = array(
				'nama_pemesan' => $this->input->post('nama_pemesan'),
				'nama_paket' => $this->input->post('nama_paket'),
                'alamat' => $this->input->post('alamat'),
                'email' => $this->input->post('email'),
                'no_telp' => $this->input->post('no_telp'),
				'jumlah_anggota' => $this->input->post('jumlah_anggota'),
				'tanggal_pemesanan' => $this->Pemesanan_model->tanggal_en($this->input->post('tanggal_pemesanan')),
				
            );
            
            $pemesanan_id = $this->Pemesanan_model->add_pemesanan($params);
            redirect('admin/pemesanan/index');
        }
        else
        {            
            $data['_view'] = 'layouts/admin/pemesanan/add';
            $this->load->view('layouts/admin/main',$data);
        }
    }  

    /*
     * Editing a pemesanan
     */
    function edit($id_pemesanan)
    {   
        // check if the pemesanan exists before trying to edit it
        $data['pemesanan'] = $this->Pemesanan_model->get_pemesanan($id_pemesanan);
        
        if(isset($data['pemesanan']->id_pemesanan))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'nama_pemesan' => $this->input->post('nama_pemesan'),
                'nama_paket' => $this->input->post('nama_paket'),
                'alamat' => $this->input->post('alamat'),
                'email' => $this->input->post('email'),
                'no_telp' => $this->input->post('no_telp'),
                'jumlah_anggota' => $this->input->post('jumlah_anggota'),
                'tanggal_pemesanan' => $this->model->Pemesanan_model->tanggal_en($this->input->post('tanggal_pemesanan')),
                );

                $this->Pemesanan_model->update_pemesanan($id_pemesanan,$params);            
                redirect('admin/pemesanan/index');
            }
            else
            {
                $data['_view'] = 'layouts/admin/pemesanan/edit';
                $this->load->view('layouts/admin/main',$data);
            }
        }
        else
            show_error('The pemesanan you are trying to edit does not exist.');
    } 

    function show($id_pemesanan)
    {
        $data['show'] = $this->Pemesanan_model->get_pemesanan($id_pemesanan);
        $data['_view'] = 'layouts/admin/pemesanan/show';
        $this->load->view('layouts/admin/main',$data);
    }
       
    /*
     * Deleting pemesanan
     */
    function remove($id_pemesanan)
    {
        $pemesanan = $this->Pemesanan_model->get_pemesanan($id_pemesanan);

        // check if the pemesanan exists before trying to delete it
        if(isset($pemesanan->id_pemesanan))
        {
            $this->Pemesanan_model->delete_pemesanan($id_pemesanan);
            redirect('admin/pemesanan/index');
        }
        else
            show_error('The pemesanan you are trying to delete does not exist.');
    }
    
}
